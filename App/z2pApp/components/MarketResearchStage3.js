import { Text, View, StyleSheet, ScrollView } from "react-native";
import { Colors } from "../Constants/styles";
import RNHTMLtoPDF from "react-native-html-to-pdf";
import Share from "react-native-share";
import PrimaryButton from "./PrimaryButton";

async function generateAndSharePDF(text, industry) {
  const htmlContent = `
    <html>
    <head>
      <style>
        body { font-family: 'Helvetica'; font-size: 12pt; }
        p, div { margin: 20px 0; }
        .bold { font-weight: bold; }
        .italic { font-style: italic; }
      </style>
    </head>
    <body>
      <h1>Market report on ${industry} generated by Z2P</h1>
      <p class="italic">Disclaimer: The statistics here are generated by a trained AI and may be incorrect. Always verify the numbers.</p>
      ${String(text)
        .split(/\n/)
        .map((line) => {
          // Check if line contains bold marker and replace or wrap accordingly
          if (/\*\*(.*?)\*\*/.test(line)) {
            // Replace ** with HTML bold, wrapping in <div> to ensure it starts on a new line
            return `<div>${line.replace(/\*\*(.*?)\*\*/g, '<span class="bold">$1</span>')}</div>`;
          } else {
            // Wrap regular lines in <p> to maintain consistent formatting
            return `<p>${line}</p>`;
          }
        })
        .join("")}
    </body>
    </html>
  `;

  try {
    const pdf = await RNHTMLtoPDF.convert({
      html: htmlContent,
      fileName: "Z2PMarketReport",
      directory: "Documents",
    });

    await Share.open({
      url: `file://${pdf.filePath}`,
      type: "application/pdf",
      title: `Market Report on ${industry}`,
    });
  } catch (error) {
    console.error("Error generating or sharing PDF:", error);
  }
}

function MarketResearchStage3({ marketReport = Data, industry }) {
  // Function to parse the marketReport string and split into normal and bold text segments
  function parseTextToComponents(text) {
    const textSegments = text.split(/(\*\*[^*]+\*\*)/g).map((segment, index) => {
      if (segment.startsWith("**") && segment.endsWith("**")) {
        return (
          <Text key={index} style={styles.boldText}>
            {segment.replace(/\*\*/g, "")}
          </Text>
        );
      } else {
        return segment;
      }
    });
    return textSegments;
  }

  return (
    <ScrollView style={styles.container}>
      <Text style={[styles.text, { marginBottom: 0, fontWeight: "bold", color: Colors.primary500, fontSize: 18 }]}>Market report on {industry} generated by Z2P</Text>
      <Text style={{ marginBottom: 20, fontSize: 10, fontStyle: "italic", color: "grey" }}>Disclaimer: The statistics here are generated by a trained AI and maybe incorrect. Always verify the numbers.</Text>
      <Text style={styles.text}>{parseTextToComponents(marketReport)}</Text>
      <PrimaryButton children={"Share PDF"} buttonPress={generateAndSharePDF.bind(this, marketReport, industry)} />
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginBottom: 20,
    marginTop: 10,
    marginHorizontal: 10,
  },
  boldText: {
    fontWeight: "bold",
  },
  text: {
    fontFamily: "OpenSans-Regular",
  },
});

export default MarketResearchStage3;
